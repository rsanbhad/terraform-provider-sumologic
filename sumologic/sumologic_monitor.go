// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Sumo Logic and manual
//     changes will be clobbered when the file is regenerated. Do not submit
//     changes to this file.
//
// ----------------------------------------------------------------------------\
package sumologic

import (
	"encoding/json"
	"fmt"
)

// CreateMonitor creates a new monitor
func (s *Client) CreateMonitor(Monitor Monitor) (string, error) {
	data, err := s.Post("v1/monitors", Monitor)
	if err != nil {
		return "", err
	}

	var createdMonitor Monitor
	err = json.Unmarshal(data, &createdMonitor)
	if err != nil {
		return "", err
	}

	return createdMonitor.ID, nil
}

// DeleteMonitor deletes a monitor by id
func (s *Client) DeleteMonitor(id string) error {
	_, err := s.Delete(fmt.Sprintf("v1/monitors/%s", id))
	return err
}

// GetMonitor gets a monitor by id
func (s *Client) GetMonitor(id string) (*Monitor, error) {
	data, _, err := s.Get(fmt.Sprintf("v1/monitors/%s", id))
	if err != nil {
		return nil, err
	}
	if data == nil {
		return nil, nil
	}

	var Monitor Monitor
	err = json.Unmarshal(data, &Monitor)
	if err != nil {
		return nil, err
	}
	return &Monitor, nil
}

// UpdateMonitor updates an existing monitor (the monitor with the same id)
func (s *Client) UpdateMonitor(Monitor Monitor) error {
	url := fmt.Sprintf("v1/monitors/%s", Monitor.ID)

	Monitor.ID = ""

	_, err := s.Put(url, Monitor)
	return err
}

// Monitor model
type Monitor struct {
	ID            string `json:"id,omitempty"`
	Name          string `json:"name"`
	Type          string `json:"type"`
	Description   string `json:"description,omitempty"`
	Version       string `json:"version,omitempty"`
	CreatedAt     string `json: "createdAt"`
	CreatedBy     string `json: "createdBy"`
	ModifiedAt    string `json: "modifiedAt"`
	ModifiedBy    string `json: "modifiedBy"`
	ParentID      string `json: "parentId"`
	ContentType   string `json: "contentType"`
	IsLocked      string `json: "isLocked"`
	IsSystem      string `json: "isSystem"`
	IsMutable     string `json: "isMutable"`
	MonitorType   string `json: "monitorType"`
	Notifications string `json: "notifications"`
	Queries       string `json: "queries"`
	Triggers      string `json: "triggers"`
}

// MonitorQuery model
type MonitorQuery struct {
	RowID        string `json:"id"`
	Query        string `json:"query"`
	IsTriggerRow string `json:"isTriggerRow"`
}

// MonitorNotification model
type MonitorNotification struct {
	Query string `json:"query"`
}

// MonitorTriggerCondition model
